#include <iostream>
#include <string>
#include <vector>

using namespace std;

// dest 뒤에 source를 붙이는 함수
void join(vector<char>& dest, vector<char> source) {
	for (int i = 0; i < source.size(); i++) {
		dest.push_back(source[i]);
	}
}

// index 계산
int cal_index(int prev, const string& picture) {
	if (picture[prev] == 'x') {
		for (int i = 0; i < 4; i++) {
			prev = cal_index(prev + 1, picture);
		}
	}
	return prev;
}

// 상하로 뒤집는 함수
vector<char> reverse(int index, const string& picture) {
	vector<char> result;
	result.push_back(picture[index]);
	if (picture[index] != 'x') return result;  // base case

	int sub_index[4];
	sub_index[0] = index + 1;
	for (int i = 1; i < 4; i++) {
		sub_index[i] = cal_index(sub_index[i - 1], picture) + 1;
	}

	join(result, reverse(sub_index[2], picture));
	join(result, reverse(sub_index[3], picture));
	join(result, reverse(sub_index[0], picture));
	join(result, reverse(sub_index[1], picture));

	return result;
}

int main() {
	int C;
	cin >> C;
	while (C--) {
		string picture;
		cin >> picture;
		vector<char> result;
		int index = 0;

		result = reverse(index, picture);
		for (int i = 0; i < result.size(); i++) {
			cout << result[i];
		}
		cout << "\n";
	}
}