#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct member {
	int age;
	char name[100];
	int time;
};

void inputM(int N, struct member* M);
void sortM(int N, struct member* M);
void printM(int N, struct member* M);

int main() {
	int N;
	scanf("%d", &N);
	struct member* M = (struct member*)malloc(sizeof(struct member) * N);

	inputM(N, M);
	sortM(N, M);
	printM(N, M);
}

void inputM(int N, struct member* M) {
	int i;
	for (i = 0; i < N; i++) {
		scanf("%d", &(M + i)->age);
		scanf("%s", &(M + i)->name);
		(M + i)->time = i;
	}
}

void sortM(int N, struct member* M) {
	int i, j, min;
	int tage, ttime;
	char temp[100];
	for (i = 0; i < N-1; i++) {
		min = i;
		for (j = i+1; j < N; j++) {
			if ((M + min)->age > (M + j)->age) {
				min = j;
			}
			else if ((M + min)->age == (M + j)->age) {
				if ((M + min)->time > (M + j)->time)
					min = j;
			}
		}
		tage = (M + min)->age;
		(M + min)->age = (M + i)->age;
		(M + i)->age = tage;

		ttime = (M + min)->time;
		(M + min)->time = (M + i)->time;
		(M + i)->time = ttime;

		strcpy(temp, (M + min)->name);
		strcpy((M + min)->name, (M + i)->name);
		strcpy((M + i)->name, temp);
	}
}

void printM(int N, struct member* M) {
	int i;
	for (i = 0; i < N; i++) {
		printf("%d ", (M + i)->age);
		printf("%s\n", (M + i)->name);
	}
}